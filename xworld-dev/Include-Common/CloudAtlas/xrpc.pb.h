// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xrpc.proto

#ifndef PROTOBUF_xrpc_2eproto__INCLUDED
#define PROTOBUF_xrpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_xrpc_2eproto();
void protobuf_InitDefaults_xrpc_2eproto();
void protobuf_AssignDesc_xrpc_2eproto();
void protobuf_ShutdownFile_xrpc_2eproto();

class xrpc_bytes_array;
class xrpc_int_array;
class xrpc_param;
class xrpc_rawdata;
class xrpc_request;
class xrpc_str_array;

// ===================================================================

class xrpc_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xrpc_request) */ {
 public:
  xrpc_request();
  virtual ~xrpc_request();

  xrpc_request(const xrpc_request& from);

  inline xrpc_request& operator=(const xrpc_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const xrpc_request& default_instance();

  static const xrpc_request* internal_default_instance();

  void Swap(xrpc_request* other);

  // implements Message ----------------------------------------------

  inline xrpc_request* New() const { return New(NULL); }

  xrpc_request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const xrpc_request& from);
  void MergeFrom(const xrpc_request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(xrpc_request* other);
  void UnsafeMergeFrom(const xrpc_request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  bool has_service_name() const;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional string method_name = 2;
  bool has_method_name() const;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 2;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);

  // optional int32 service_id = 3;
  bool has_service_id() const;
  void clear_service_id();
  static const int kServiceIdFieldNumber = 3;
  ::google::protobuf::int32 service_id() const;
  void set_service_id(::google::protobuf::int32 value);

  // optional int32 method_id = 4;
  bool has_method_id() const;
  void clear_method_id();
  static const int kMethodIdFieldNumber = 4;
  ::google::protobuf::int32 method_id() const;
  void set_method_id(::google::protobuf::int32 value);

  // optional .xrpc_param params = 5;
  bool has_params() const;
  void clear_params();
  static const int kParamsFieldNumber = 5;
  const ::xrpc_param& params() const;
  ::xrpc_param* mutable_params();
  ::xrpc_param* release_params();
  void set_allocated_params(::xrpc_param* params);

  // @@protoc_insertion_point(class_scope:xrpc_request)
 private:
  inline void set_has_service_name();
  inline void clear_has_service_name();
  inline void set_has_method_name();
  inline void clear_has_method_name();
  inline void set_has_service_id();
  inline void clear_has_service_id();
  inline void set_has_method_id();
  inline void clear_has_method_id();
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  ::xrpc_param* params_;
  ::google::protobuf::int32 service_id_;
  ::google::protobuf::int32 method_id_;
  friend void  protobuf_InitDefaults_xrpc_2eproto_impl();
  friend void  protobuf_AddDesc_xrpc_2eproto_impl();
  friend void protobuf_AssignDesc_xrpc_2eproto();
  friend void protobuf_ShutdownFile_xrpc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<xrpc_request> xrpc_request_default_instance_;

// -------------------------------------------------------------------

class xrpc_int_array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xrpc_int_array) */ {
 public:
  xrpc_int_array();
  virtual ~xrpc_int_array();

  xrpc_int_array(const xrpc_int_array& from);

  inline xrpc_int_array& operator=(const xrpc_int_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const xrpc_int_array& default_instance();

  static const xrpc_int_array* internal_default_instance();

  void Swap(xrpc_int_array* other);

  // implements Message ----------------------------------------------

  inline xrpc_int_array* New() const { return New(NULL); }

  xrpc_int_array* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const xrpc_int_array& from);
  void MergeFrom(const xrpc_int_array& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(xrpc_int_array* other);
  void UnsafeMergeFrom(const xrpc_int_array& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::protobuf::int32 values(int index) const;
  void set_values(int index, ::google::protobuf::int32 value);
  void add_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:xrpc_int_array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  friend void  protobuf_InitDefaults_xrpc_2eproto_impl();
  friend void  protobuf_AddDesc_xrpc_2eproto_impl();
  friend void protobuf_AssignDesc_xrpc_2eproto();
  friend void protobuf_ShutdownFile_xrpc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<xrpc_int_array> xrpc_int_array_default_instance_;

// -------------------------------------------------------------------

class xrpc_bytes_array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xrpc_bytes_array) */ {
 public:
  xrpc_bytes_array();
  virtual ~xrpc_bytes_array();

  xrpc_bytes_array(const xrpc_bytes_array& from);

  inline xrpc_bytes_array& operator=(const xrpc_bytes_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const xrpc_bytes_array& default_instance();

  static const xrpc_bytes_array* internal_default_instance();

  void Swap(xrpc_bytes_array* other);

  // implements Message ----------------------------------------------

  inline xrpc_bytes_array* New() const { return New(NULL); }

  xrpc_bytes_array* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const xrpc_bytes_array& from);
  void MergeFrom(const xrpc_bytes_array& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(xrpc_bytes_array* other);
  void UnsafeMergeFrom(const xrpc_bytes_array& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  void set_values(int index, const char* value);
  void set_values(int index, const void* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  void add_values(const char* value);
  void add_values(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // @@protoc_insertion_point(class_scope:xrpc_bytes_array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  friend void  protobuf_InitDefaults_xrpc_2eproto_impl();
  friend void  protobuf_AddDesc_xrpc_2eproto_impl();
  friend void protobuf_AssignDesc_xrpc_2eproto();
  friend void protobuf_ShutdownFile_xrpc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<xrpc_bytes_array> xrpc_bytes_array_default_instance_;

// -------------------------------------------------------------------

class xrpc_str_array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xrpc_str_array) */ {
 public:
  xrpc_str_array();
  virtual ~xrpc_str_array();

  xrpc_str_array(const xrpc_str_array& from);

  inline xrpc_str_array& operator=(const xrpc_str_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const xrpc_str_array& default_instance();

  static const xrpc_str_array* internal_default_instance();

  void Swap(xrpc_str_array* other);

  // implements Message ----------------------------------------------

  inline xrpc_str_array* New() const { return New(NULL); }

  xrpc_str_array* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const xrpc_str_array& from);
  void MergeFrom(const xrpc_str_array& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(xrpc_str_array* other);
  void UnsafeMergeFrom(const xrpc_str_array& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // @@protoc_insertion_point(class_scope:xrpc_str_array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  friend void  protobuf_InitDefaults_xrpc_2eproto_impl();
  friend void  protobuf_AddDesc_xrpc_2eproto_impl();
  friend void protobuf_AssignDesc_xrpc_2eproto();
  friend void protobuf_ShutdownFile_xrpc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<xrpc_str_array> xrpc_str_array_default_instance_;

// -------------------------------------------------------------------

class xrpc_rawdata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xrpc_rawdata) */ {
 public:
  xrpc_rawdata();
  virtual ~xrpc_rawdata();

  xrpc_rawdata(const xrpc_rawdata& from);

  inline xrpc_rawdata& operator=(const xrpc_rawdata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const xrpc_rawdata& default_instance();

  static const xrpc_rawdata* internal_default_instance();

  void Swap(xrpc_rawdata* other);

  // implements Message ----------------------------------------------

  inline xrpc_rawdata* New() const { return New(NULL); }

  xrpc_rawdata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const xrpc_rawdata& from);
  void MergeFrom(const xrpc_rawdata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(xrpc_rawdata* other);
  void UnsafeMergeFrom(const xrpc_rawdata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:xrpc_rawdata)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend void  protobuf_InitDefaults_xrpc_2eproto_impl();
  friend void  protobuf_AddDesc_xrpc_2eproto_impl();
  friend void protobuf_AssignDesc_xrpc_2eproto();
  friend void protobuf_ShutdownFile_xrpc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<xrpc_rawdata> xrpc_rawdata_default_instance_;

// -------------------------------------------------------------------

class xrpc_param : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xrpc_param) */ {
 public:
  xrpc_param();
  virtual ~xrpc_param();

  xrpc_param(const xrpc_param& from);

  inline xrpc_param& operator=(const xrpc_param& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const xrpc_param& default_instance();

  static const xrpc_param* internal_default_instance();

  void Swap(xrpc_param* other);

  // implements Message ----------------------------------------------

  inline xrpc_param* New() const { return New(NULL); }

  xrpc_param* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const xrpc_param& from);
  void MergeFrom(const xrpc_param& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(xrpc_param* other);
  void UnsafeMergeFrom(const xrpc_param& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 key_type = 1;
  int key_type_size() const;
  void clear_key_type();
  static const int kKeyTypeFieldNumber = 1;
  ::google::protobuf::int32 key_type(int index) const;
  void set_key_type(int index, ::google::protobuf::int32 value);
  void add_key_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      key_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_key_type();

  // repeated string key_str = 2;
  int key_str_size() const;
  void clear_key_str();
  static const int kKeyStrFieldNumber = 2;
  const ::std::string& key_str(int index) const;
  ::std::string* mutable_key_str(int index);
  void set_key_str(int index, const ::std::string& value);
  void set_key_str(int index, const char* value);
  void set_key_str(int index, const char* value, size_t size);
  ::std::string* add_key_str();
  void add_key_str(const ::std::string& value);
  void add_key_str(const char* value);
  void add_key_str(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& key_str() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key_str();

  // repeated bool key_bool = 3;
  int key_bool_size() const;
  void clear_key_bool();
  static const int kKeyBoolFieldNumber = 3;
  bool key_bool(int index) const;
  void set_key_bool(int index, bool value);
  void add_key_bool(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      key_bool() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_key_bool();

  // repeated double key_double = 4;
  int key_double_size() const;
  void clear_key_double();
  static const int kKeyDoubleFieldNumber = 4;
  double key_double(int index) const;
  void set_key_double(int index, double value);
  void add_key_double(double value);
  const ::google::protobuf::RepeatedField< double >&
      key_double() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_key_double();

  // repeated int32 key_int = 5;
  int key_int_size() const;
  void clear_key_int();
  static const int kKeyIntFieldNumber = 5;
  ::google::protobuf::int32 key_int(int index) const;
  void set_key_int(int index, ::google::protobuf::int32 value);
  void add_key_int(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      key_int() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_key_int();

  // repeated int32 value_type = 6;
  int value_type_size() const;
  void clear_value_type();
  static const int kValueTypeFieldNumber = 6;
  ::google::protobuf::int32 value_type(int index) const;
  void set_value_type(int index, ::google::protobuf::int32 value);
  void add_value_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value_type();

  // repeated bytes value_str = 7;
  int value_str_size() const;
  void clear_value_str();
  static const int kValueStrFieldNumber = 7;
  const ::std::string& value_str(int index) const;
  ::std::string* mutable_value_str(int index);
  void set_value_str(int index, const ::std::string& value);
  void set_value_str(int index, const char* value);
  void set_value_str(int index, const void* value, size_t size);
  ::std::string* add_value_str();
  void add_value_str(const ::std::string& value);
  void add_value_str(const char* value);
  void add_value_str(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value_str() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value_str();

  // repeated bool value_bool = 8;
  int value_bool_size() const;
  void clear_value_bool();
  static const int kValueBoolFieldNumber = 8;
  bool value_bool(int index) const;
  void set_value_bool(int index, bool value);
  void add_value_bool(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      value_bool() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_value_bool();

  // repeated double value_double = 9;
  int value_double_size() const;
  void clear_value_double();
  static const int kValueDoubleFieldNumber = 9;
  double value_double(int index) const;
  void set_value_double(int index, double value);
  void add_value_double(double value);
  const ::google::protobuf::RepeatedField< double >&
      value_double() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_value_double();

  // repeated int32 value_int = 10;
  int value_int_size() const;
  void clear_value_int();
  static const int kValueIntFieldNumber = 10;
  ::google::protobuf::int32 value_int(int index) const;
  void set_value_int(int index, ::google::protobuf::int32 value);
  void add_value_int(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value_int() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value_int();

  // repeated int64 value_int64 = 11;
  int value_int64_size() const;
  void clear_value_int64();
  static const int kValueInt64FieldNumber = 11;
  ::google::protobuf::int64 value_int64(int index) const;
  void set_value_int64(int index, ::google::protobuf::int64 value);
  void add_value_int64(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      value_int64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_value_int64();

  // repeated float value_float = 12;
  int value_float_size() const;
  void clear_value_float();
  static const int kValueFloatFieldNumber = 12;
  float value_float(int index) const;
  void set_value_float(int index, float value);
  void add_value_float(float value);
  const ::google::protobuf::RepeatedField< float >&
      value_float() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_value_float();

  // repeated .xrpc_param value_table = 13;
  int value_table_size() const;
  void clear_value_table();
  static const int kValueTableFieldNumber = 13;
  const ::xrpc_param& value_table(int index) const;
  ::xrpc_param* mutable_value_table(int index);
  ::xrpc_param* add_value_table();
  ::google::protobuf::RepeatedPtrField< ::xrpc_param >*
      mutable_value_table();
  const ::google::protobuf::RepeatedPtrField< ::xrpc_param >&
      value_table() const;

  // @@protoc_insertion_point(class_scope:xrpc_param)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > key_type_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_str_;
  ::google::protobuf::RepeatedField< bool > key_bool_;
  ::google::protobuf::RepeatedField< double > key_double_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > key_int_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value_type_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_str_;
  ::google::protobuf::RepeatedField< bool > value_bool_;
  ::google::protobuf::RepeatedField< double > value_double_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value_int_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > value_int64_;
  ::google::protobuf::RepeatedField< float > value_float_;
  ::google::protobuf::RepeatedPtrField< ::xrpc_param > value_table_;
  friend void  protobuf_InitDefaults_xrpc_2eproto_impl();
  friend void  protobuf_AddDesc_xrpc_2eproto_impl();
  friend void protobuf_AssignDesc_xrpc_2eproto();
  friend void protobuf_ShutdownFile_xrpc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<xrpc_param> xrpc_param_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// xrpc_request

// optional string service_name = 1;
inline bool xrpc_request::has_service_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void xrpc_request::set_has_service_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void xrpc_request::clear_has_service_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void xrpc_request::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_service_name();
}
inline const ::std::string& xrpc_request::service_name() const {
  // @@protoc_insertion_point(field_get:xrpc_request.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xrpc_request::set_service_name(const ::std::string& value) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xrpc_request.service_name)
}
inline void xrpc_request::set_service_name(const char* value) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xrpc_request.service_name)
}
inline void xrpc_request::set_service_name(const char* value, size_t size) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xrpc_request.service_name)
}
inline ::std::string* xrpc_request::mutable_service_name() {
  set_has_service_name();
  // @@protoc_insertion_point(field_mutable:xrpc_request.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* xrpc_request::release_service_name() {
  // @@protoc_insertion_point(field_release:xrpc_request.service_name)
  clear_has_service_name();
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xrpc_request::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    set_has_service_name();
  } else {
    clear_has_service_name();
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:xrpc_request.service_name)
}

// optional string method_name = 2;
inline bool xrpc_request::has_method_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void xrpc_request::set_has_method_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void xrpc_request::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void xrpc_request::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_name();
}
inline const ::std::string& xrpc_request::method_name() const {
  // @@protoc_insertion_point(field_get:xrpc_request.method_name)
  return method_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xrpc_request::set_method_name(const ::std::string& value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xrpc_request.method_name)
}
inline void xrpc_request::set_method_name(const char* value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xrpc_request.method_name)
}
inline void xrpc_request::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xrpc_request.method_name)
}
inline ::std::string* xrpc_request::mutable_method_name() {
  set_has_method_name();
  // @@protoc_insertion_point(field_mutable:xrpc_request.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* xrpc_request::release_method_name() {
  // @@protoc_insertion_point(field_release:xrpc_request.method_name)
  clear_has_method_name();
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xrpc_request::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    set_has_method_name();
  } else {
    clear_has_method_name();
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:xrpc_request.method_name)
}

// optional int32 service_id = 3;
inline bool xrpc_request::has_service_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void xrpc_request::set_has_service_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void xrpc_request::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void xrpc_request::clear_service_id() {
  service_id_ = 0;
  clear_has_service_id();
}
inline ::google::protobuf::int32 xrpc_request::service_id() const {
  // @@protoc_insertion_point(field_get:xrpc_request.service_id)
  return service_id_;
}
inline void xrpc_request::set_service_id(::google::protobuf::int32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:xrpc_request.service_id)
}

// optional int32 method_id = 4;
inline bool xrpc_request::has_method_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void xrpc_request::set_has_method_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void xrpc_request::clear_has_method_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void xrpc_request::clear_method_id() {
  method_id_ = 0;
  clear_has_method_id();
}
inline ::google::protobuf::int32 xrpc_request::method_id() const {
  // @@protoc_insertion_point(field_get:xrpc_request.method_id)
  return method_id_;
}
inline void xrpc_request::set_method_id(::google::protobuf::int32 value) {
  set_has_method_id();
  method_id_ = value;
  // @@protoc_insertion_point(field_set:xrpc_request.method_id)
}

// optional .xrpc_param params = 5;
inline bool xrpc_request::has_params() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void xrpc_request::set_has_params() {
  _has_bits_[0] |= 0x00000010u;
}
inline void xrpc_request::clear_has_params() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void xrpc_request::clear_params() {
  if (params_ != NULL) params_->::xrpc_param::Clear();
  clear_has_params();
}
inline const ::xrpc_param& xrpc_request::params() const {
  // @@protoc_insertion_point(field_get:xrpc_request.params)
  return params_ != NULL ? *params_
                         : *::xrpc_param::internal_default_instance();
}
inline ::xrpc_param* xrpc_request::mutable_params() {
  set_has_params();
  if (params_ == NULL) {
    params_ = new ::xrpc_param;
  }
  // @@protoc_insertion_point(field_mutable:xrpc_request.params)
  return params_;
}
inline ::xrpc_param* xrpc_request::release_params() {
  // @@protoc_insertion_point(field_release:xrpc_request.params)
  clear_has_params();
  ::xrpc_param* temp = params_;
  params_ = NULL;
  return temp;
}
inline void xrpc_request::set_allocated_params(::xrpc_param* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
  // @@protoc_insertion_point(field_set_allocated:xrpc_request.params)
}

inline const xrpc_request* xrpc_request::internal_default_instance() {
  return &xrpc_request_default_instance_.get();
}
// -------------------------------------------------------------------

// xrpc_int_array

// repeated int32 values = 1;
inline int xrpc_int_array::values_size() const {
  return values_.size();
}
inline void xrpc_int_array::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 xrpc_int_array::values(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_int_array.values)
  return values_.Get(index);
}
inline void xrpc_int_array::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_int_array.values)
}
inline void xrpc_int_array::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_int_array.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
xrpc_int_array::values() const {
  // @@protoc_insertion_point(field_list:xrpc_int_array.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
xrpc_int_array::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_int_array.values)
  return &values_;
}

inline const xrpc_int_array* xrpc_int_array::internal_default_instance() {
  return &xrpc_int_array_default_instance_.get();
}
// -------------------------------------------------------------------

// xrpc_bytes_array

// repeated bytes values = 1;
inline int xrpc_bytes_array::values_size() const {
  return values_.size();
}
inline void xrpc_bytes_array::clear_values() {
  values_.Clear();
}
inline const ::std::string& xrpc_bytes_array::values(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_bytes_array.values)
  return values_.Get(index);
}
inline ::std::string* xrpc_bytes_array::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:xrpc_bytes_array.values)
  return values_.Mutable(index);
}
inline void xrpc_bytes_array::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xrpc_bytes_array.values)
  values_.Mutable(index)->assign(value);
}
inline void xrpc_bytes_array::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xrpc_bytes_array.values)
}
inline void xrpc_bytes_array::set_values(int index, const void* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xrpc_bytes_array.values)
}
inline ::std::string* xrpc_bytes_array::add_values() {
  // @@protoc_insertion_point(field_add_mutable:xrpc_bytes_array.values)
  return values_.Add();
}
inline void xrpc_bytes_array::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xrpc_bytes_array.values)
}
inline void xrpc_bytes_array::add_values(const char* value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xrpc_bytes_array.values)
}
inline void xrpc_bytes_array::add_values(const void* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xrpc_bytes_array.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
xrpc_bytes_array::values() const {
  // @@protoc_insertion_point(field_list:xrpc_bytes_array.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
xrpc_bytes_array::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_bytes_array.values)
  return &values_;
}

inline const xrpc_bytes_array* xrpc_bytes_array::internal_default_instance() {
  return &xrpc_bytes_array_default_instance_.get();
}
// -------------------------------------------------------------------

// xrpc_str_array

// repeated string values = 1;
inline int xrpc_str_array::values_size() const {
  return values_.size();
}
inline void xrpc_str_array::clear_values() {
  values_.Clear();
}
inline const ::std::string& xrpc_str_array::values(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_str_array.values)
  return values_.Get(index);
}
inline ::std::string* xrpc_str_array::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:xrpc_str_array.values)
  return values_.Mutable(index);
}
inline void xrpc_str_array::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xrpc_str_array.values)
  values_.Mutable(index)->assign(value);
}
inline void xrpc_str_array::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xrpc_str_array.values)
}
inline void xrpc_str_array::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xrpc_str_array.values)
}
inline ::std::string* xrpc_str_array::add_values() {
  // @@protoc_insertion_point(field_add_mutable:xrpc_str_array.values)
  return values_.Add();
}
inline void xrpc_str_array::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xrpc_str_array.values)
}
inline void xrpc_str_array::add_values(const char* value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xrpc_str_array.values)
}
inline void xrpc_str_array::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xrpc_str_array.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
xrpc_str_array::values() const {
  // @@protoc_insertion_point(field_list:xrpc_str_array.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
xrpc_str_array::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_str_array.values)
  return &values_;
}

inline const xrpc_str_array* xrpc_str_array::internal_default_instance() {
  return &xrpc_str_array_default_instance_.get();
}
// -------------------------------------------------------------------

// xrpc_rawdata

// required bytes data = 1;
inline bool xrpc_rawdata::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void xrpc_rawdata::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void xrpc_rawdata::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void xrpc_rawdata::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& xrpc_rawdata::data() const {
  // @@protoc_insertion_point(field_get:xrpc_rawdata.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xrpc_rawdata::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xrpc_rawdata.data)
}
inline void xrpc_rawdata::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xrpc_rawdata.data)
}
inline void xrpc_rawdata::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xrpc_rawdata.data)
}
inline ::std::string* xrpc_rawdata::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:xrpc_rawdata.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* xrpc_rawdata::release_data() {
  // @@protoc_insertion_point(field_release:xrpc_rawdata.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xrpc_rawdata::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:xrpc_rawdata.data)
}

inline const xrpc_rawdata* xrpc_rawdata::internal_default_instance() {
  return &xrpc_rawdata_default_instance_.get();
}
// -------------------------------------------------------------------

// xrpc_param

// repeated int32 key_type = 1;
inline int xrpc_param::key_type_size() const {
  return key_type_.size();
}
inline void xrpc_param::clear_key_type() {
  key_type_.Clear();
}
inline ::google::protobuf::int32 xrpc_param::key_type(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.key_type)
  return key_type_.Get(index);
}
inline void xrpc_param::set_key_type(int index, ::google::protobuf::int32 value) {
  key_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.key_type)
}
inline void xrpc_param::add_key_type(::google::protobuf::int32 value) {
  key_type_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.key_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
xrpc_param::key_type() const {
  // @@protoc_insertion_point(field_list:xrpc_param.key_type)
  return key_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
xrpc_param::mutable_key_type() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.key_type)
  return &key_type_;
}

// repeated string key_str = 2;
inline int xrpc_param::key_str_size() const {
  return key_str_.size();
}
inline void xrpc_param::clear_key_str() {
  key_str_.Clear();
}
inline const ::std::string& xrpc_param::key_str(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.key_str)
  return key_str_.Get(index);
}
inline ::std::string* xrpc_param::mutable_key_str(int index) {
  // @@protoc_insertion_point(field_mutable:xrpc_param.key_str)
  return key_str_.Mutable(index);
}
inline void xrpc_param::set_key_str(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xrpc_param.key_str)
  key_str_.Mutable(index)->assign(value);
}
inline void xrpc_param::set_key_str(int index, const char* value) {
  key_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xrpc_param.key_str)
}
inline void xrpc_param::set_key_str(int index, const char* value, size_t size) {
  key_str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xrpc_param.key_str)
}
inline ::std::string* xrpc_param::add_key_str() {
  // @@protoc_insertion_point(field_add_mutable:xrpc_param.key_str)
  return key_str_.Add();
}
inline void xrpc_param::add_key_str(const ::std::string& value) {
  key_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xrpc_param.key_str)
}
inline void xrpc_param::add_key_str(const char* value) {
  key_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xrpc_param.key_str)
}
inline void xrpc_param::add_key_str(const char* value, size_t size) {
  key_str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xrpc_param.key_str)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
xrpc_param::key_str() const {
  // @@protoc_insertion_point(field_list:xrpc_param.key_str)
  return key_str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
xrpc_param::mutable_key_str() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.key_str)
  return &key_str_;
}

// repeated bool key_bool = 3;
inline int xrpc_param::key_bool_size() const {
  return key_bool_.size();
}
inline void xrpc_param::clear_key_bool() {
  key_bool_.Clear();
}
inline bool xrpc_param::key_bool(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.key_bool)
  return key_bool_.Get(index);
}
inline void xrpc_param::set_key_bool(int index, bool value) {
  key_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.key_bool)
}
inline void xrpc_param::add_key_bool(bool value) {
  key_bool_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.key_bool)
}
inline const ::google::protobuf::RepeatedField< bool >&
xrpc_param::key_bool() const {
  // @@protoc_insertion_point(field_list:xrpc_param.key_bool)
  return key_bool_;
}
inline ::google::protobuf::RepeatedField< bool >*
xrpc_param::mutable_key_bool() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.key_bool)
  return &key_bool_;
}

// repeated double key_double = 4;
inline int xrpc_param::key_double_size() const {
  return key_double_.size();
}
inline void xrpc_param::clear_key_double() {
  key_double_.Clear();
}
inline double xrpc_param::key_double(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.key_double)
  return key_double_.Get(index);
}
inline void xrpc_param::set_key_double(int index, double value) {
  key_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.key_double)
}
inline void xrpc_param::add_key_double(double value) {
  key_double_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.key_double)
}
inline const ::google::protobuf::RepeatedField< double >&
xrpc_param::key_double() const {
  // @@protoc_insertion_point(field_list:xrpc_param.key_double)
  return key_double_;
}
inline ::google::protobuf::RepeatedField< double >*
xrpc_param::mutable_key_double() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.key_double)
  return &key_double_;
}

// repeated int32 key_int = 5;
inline int xrpc_param::key_int_size() const {
  return key_int_.size();
}
inline void xrpc_param::clear_key_int() {
  key_int_.Clear();
}
inline ::google::protobuf::int32 xrpc_param::key_int(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.key_int)
  return key_int_.Get(index);
}
inline void xrpc_param::set_key_int(int index, ::google::protobuf::int32 value) {
  key_int_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.key_int)
}
inline void xrpc_param::add_key_int(::google::protobuf::int32 value) {
  key_int_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.key_int)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
xrpc_param::key_int() const {
  // @@protoc_insertion_point(field_list:xrpc_param.key_int)
  return key_int_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
xrpc_param::mutable_key_int() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.key_int)
  return &key_int_;
}

// repeated int32 value_type = 6;
inline int xrpc_param::value_type_size() const {
  return value_type_.size();
}
inline void xrpc_param::clear_value_type() {
  value_type_.Clear();
}
inline ::google::protobuf::int32 xrpc_param::value_type(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.value_type)
  return value_type_.Get(index);
}
inline void xrpc_param::set_value_type(int index, ::google::protobuf::int32 value) {
  value_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.value_type)
}
inline void xrpc_param::add_value_type(::google::protobuf::int32 value) {
  value_type_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.value_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
xrpc_param::value_type() const {
  // @@protoc_insertion_point(field_list:xrpc_param.value_type)
  return value_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
xrpc_param::mutable_value_type() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.value_type)
  return &value_type_;
}

// repeated bytes value_str = 7;
inline int xrpc_param::value_str_size() const {
  return value_str_.size();
}
inline void xrpc_param::clear_value_str() {
  value_str_.Clear();
}
inline const ::std::string& xrpc_param::value_str(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.value_str)
  return value_str_.Get(index);
}
inline ::std::string* xrpc_param::mutable_value_str(int index) {
  // @@protoc_insertion_point(field_mutable:xrpc_param.value_str)
  return value_str_.Mutable(index);
}
inline void xrpc_param::set_value_str(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xrpc_param.value_str)
  value_str_.Mutable(index)->assign(value);
}
inline void xrpc_param::set_value_str(int index, const char* value) {
  value_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xrpc_param.value_str)
}
inline void xrpc_param::set_value_str(int index, const void* value, size_t size) {
  value_str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xrpc_param.value_str)
}
inline ::std::string* xrpc_param::add_value_str() {
  // @@protoc_insertion_point(field_add_mutable:xrpc_param.value_str)
  return value_str_.Add();
}
inline void xrpc_param::add_value_str(const ::std::string& value) {
  value_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xrpc_param.value_str)
}
inline void xrpc_param::add_value_str(const char* value) {
  value_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xrpc_param.value_str)
}
inline void xrpc_param::add_value_str(const void* value, size_t size) {
  value_str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xrpc_param.value_str)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
xrpc_param::value_str() const {
  // @@protoc_insertion_point(field_list:xrpc_param.value_str)
  return value_str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
xrpc_param::mutable_value_str() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.value_str)
  return &value_str_;
}

// repeated bool value_bool = 8;
inline int xrpc_param::value_bool_size() const {
  return value_bool_.size();
}
inline void xrpc_param::clear_value_bool() {
  value_bool_.Clear();
}
inline bool xrpc_param::value_bool(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.value_bool)
  return value_bool_.Get(index);
}
inline void xrpc_param::set_value_bool(int index, bool value) {
  value_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.value_bool)
}
inline void xrpc_param::add_value_bool(bool value) {
  value_bool_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.value_bool)
}
inline const ::google::protobuf::RepeatedField< bool >&
xrpc_param::value_bool() const {
  // @@protoc_insertion_point(field_list:xrpc_param.value_bool)
  return value_bool_;
}
inline ::google::protobuf::RepeatedField< bool >*
xrpc_param::mutable_value_bool() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.value_bool)
  return &value_bool_;
}

// repeated double value_double = 9;
inline int xrpc_param::value_double_size() const {
  return value_double_.size();
}
inline void xrpc_param::clear_value_double() {
  value_double_.Clear();
}
inline double xrpc_param::value_double(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.value_double)
  return value_double_.Get(index);
}
inline void xrpc_param::set_value_double(int index, double value) {
  value_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.value_double)
}
inline void xrpc_param::add_value_double(double value) {
  value_double_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.value_double)
}
inline const ::google::protobuf::RepeatedField< double >&
xrpc_param::value_double() const {
  // @@protoc_insertion_point(field_list:xrpc_param.value_double)
  return value_double_;
}
inline ::google::protobuf::RepeatedField< double >*
xrpc_param::mutable_value_double() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.value_double)
  return &value_double_;
}

// repeated int32 value_int = 10;
inline int xrpc_param::value_int_size() const {
  return value_int_.size();
}
inline void xrpc_param::clear_value_int() {
  value_int_.Clear();
}
inline ::google::protobuf::int32 xrpc_param::value_int(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.value_int)
  return value_int_.Get(index);
}
inline void xrpc_param::set_value_int(int index, ::google::protobuf::int32 value) {
  value_int_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.value_int)
}
inline void xrpc_param::add_value_int(::google::protobuf::int32 value) {
  value_int_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.value_int)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
xrpc_param::value_int() const {
  // @@protoc_insertion_point(field_list:xrpc_param.value_int)
  return value_int_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
xrpc_param::mutable_value_int() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.value_int)
  return &value_int_;
}

// repeated int64 value_int64 = 11;
inline int xrpc_param::value_int64_size() const {
  return value_int64_.size();
}
inline void xrpc_param::clear_value_int64() {
  value_int64_.Clear();
}
inline ::google::protobuf::int64 xrpc_param::value_int64(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.value_int64)
  return value_int64_.Get(index);
}
inline void xrpc_param::set_value_int64(int index, ::google::protobuf::int64 value) {
  value_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.value_int64)
}
inline void xrpc_param::add_value_int64(::google::protobuf::int64 value) {
  value_int64_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.value_int64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
xrpc_param::value_int64() const {
  // @@protoc_insertion_point(field_list:xrpc_param.value_int64)
  return value_int64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
xrpc_param::mutable_value_int64() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.value_int64)
  return &value_int64_;
}

// repeated float value_float = 12;
inline int xrpc_param::value_float_size() const {
  return value_float_.size();
}
inline void xrpc_param::clear_value_float() {
  value_float_.Clear();
}
inline float xrpc_param::value_float(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.value_float)
  return value_float_.Get(index);
}
inline void xrpc_param::set_value_float(int index, float value) {
  value_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:xrpc_param.value_float)
}
inline void xrpc_param::add_value_float(float value) {
  value_float_.Add(value);
  // @@protoc_insertion_point(field_add:xrpc_param.value_float)
}
inline const ::google::protobuf::RepeatedField< float >&
xrpc_param::value_float() const {
  // @@protoc_insertion_point(field_list:xrpc_param.value_float)
  return value_float_;
}
inline ::google::protobuf::RepeatedField< float >*
xrpc_param::mutable_value_float() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.value_float)
  return &value_float_;
}

// repeated .xrpc_param value_table = 13;
inline int xrpc_param::value_table_size() const {
  return value_table_.size();
}
inline void xrpc_param::clear_value_table() {
  value_table_.Clear();
}
inline const ::xrpc_param& xrpc_param::value_table(int index) const {
  // @@protoc_insertion_point(field_get:xrpc_param.value_table)
  return value_table_.Get(index);
}
inline ::xrpc_param* xrpc_param::mutable_value_table(int index) {
  // @@protoc_insertion_point(field_mutable:xrpc_param.value_table)
  return value_table_.Mutable(index);
}
inline ::xrpc_param* xrpc_param::add_value_table() {
  // @@protoc_insertion_point(field_add:xrpc_param.value_table)
  return value_table_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xrpc_param >*
xrpc_param::mutable_value_table() {
  // @@protoc_insertion_point(field_mutable_list:xrpc_param.value_table)
  return &value_table_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xrpc_param >&
xrpc_param::value_table() const {
  // @@protoc_insertion_point(field_list:xrpc_param.value_table)
  return value_table_;
}

inline const xrpc_param* xrpc_param::internal_default_instance() {
  return &xrpc_param_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_xrpc_2eproto__INCLUDED
